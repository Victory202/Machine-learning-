{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np \n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [],
   "source": [
    "music_data=pd.read_excel(r\"C:\\Users\\MR RAY\\Desktop\\la_proff\\Music.xlsx\")\n",
    "X=music_data.drop(columns=['GENRE'])\n",
    "Y=pd.DataFrame(music_data['GENRE'])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.tree import DecisionTreeClassifier\n",
    "#from sklearn.externals import joblib\n",
    "from sklearn import tree\n",
    "model=DecisionTreeClassifier()\n",
    "model.fit(X,Y)\n",
    "music_data\n",
    "predictions=model.predict([ [21,1],[22,0]])\n",
    "#joblib.dump(model,'music-recommender.joblib')\n",
    "tree.export_graphviz(model, out_file='music-recommender.dot', feature_names=['age','gender'], class_names=sorted(Y.nunique()),label='all',rounded=True,filled=True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.0"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "#measure accuracy\n",
    "from sklearn.model_selection import train_test_split\n",
    "X_train,X_test,Y_train,Y_test=train_test_split (X,Y, test_size=0.2)\n",
    "model.fit(X_train,Y_train)\n",
    "prediction=model.predict(X_test)\n",
    "from sklearn.metrics import accuracy_score\n",
    "SCORE=accuracy_score(Y_test,prediction)\n",
    "SCORE"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "MERRY CHRISTMAS"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Your percentage mark is 94.73684210526315\n",
      "Victory,Your grade:A+\n"
     ]
    }
   ],
   "source": [
    "def main_first():\n",
    "    while True:\n",
    "        try:\n",
    "            name=input((\"Enter your name\"))\n",
    "            marks=int(input(\"Enter your marks\"))\n",
    "            toal=int(input(\"Enter your total marks\"))\n",
    "            if(marks<0 or toal <0 or marks>toal):\n",
    "                print(f\"Invalid input! Marks must be between 0 and {toal}\")\n",
    "                continue\n",
    "        except ValueError:\n",
    "            print(\"Invalid input! please enter a valid number\")\n",
    "            continue\n",
    "        else:\n",
    "            percentage=(marks/toal)*100\n",
    "            print(f\"Your percentage mark is {percentage}\")\n",
    "            if(percentage>=90):\n",
    "                print(name+ \",Your grade:A+\")\n",
    "            elif (percentage >=80 and percentage<=89):\n",
    "                print(name+\",Your grade:A\")   \n",
    "            elif (percentage>=70 and percentage<=79):\n",
    "                print(name+\",Your grade:B\")   \n",
    "            elif (percentage >=60 and percentage<=69):\n",
    "                print(name+\",Your grade:C\")\n",
    "            elif(percentage >=50 and percentage <=59):\n",
    "                print(name+\",Your grade:D\")\n",
    "            else:\n",
    "                print(name+\",You have failed\")\n",
    "                break\n",
    "main_first()                              "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "7\n"
     ]
    }
   ],
   "source": [
    "Month='January'\n",
    "print(len(Month))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
